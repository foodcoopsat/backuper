#!/bin/sh
set -e

function send_error_email () {
    echo "Subject: Failed creating foodcoops backup on: $(date)" > /tmp/error.txt
    echo "From: backuper@foodcoops.at" >> /tmp/error.txt
    echo "" >> /tmp/error.txt
    echo "Failed creating backup on: $(date)" >> /tmp/error.txt
    sendmail -v -S mail.foodcoops.at $RECIPIENT_ADDRESS_ERROR -f backuper@foodcoops.at < /tmp/error.txt
}

trap send_error_email ERR

destination=/backup_storage

echo "Removing old backups..."

find $destination/daily -maxdepth 1 -mtime +7 -type f -exec rm -v {} \;
find $destination/weekly -maxdepth 1 -mtime +31 -type f -exec rm -v {} \;
find $destination/monthly -maxdepth 1 -mtime +365 -type f -exec rm -v {} \;

echo "Creatting dump for ${MYSQLDUMP_HOST}..."

mysqldump -h"$MYSQLDUMP_HOST" \
  -u"$MYSQLDUMP_USER" \
  -p"$MYSQLDUMP_PASSWORD" \
  --single-transaction \
  --order-by-primary \
  --compress \
  --all-databases \
  --verbose > /backup/mysql_dump.sql

echo "Creatting dump for ${PGHOST}..."

pg_dumpall -Oxvf /backup/postgres_dump.sql

echo "Compressing files..."

dir=daily

if [ `date +%d` -eq 1 ]; then
  dir=monthly
elif [ `date +%w` -eq 0 ]; then
  dir=weekly
fi

filename=$destination/$dir/backup_$(date +%Y-%m-%d).tar.gz

mkdir -p $destination/$dir
tar -zcpvf $filename /backup

echo "Wrote file to $filename"

remote_destination=/backup_storage_remote

echo "Removing old remote backups..."

find $remote_destination/daily -maxdepth 1 -mtime +7 -type f -exec rm -v {} \;
find $remote_destination/weekly -maxdepth 1 -mtime +31 -type f -exec rm -v {} \;
find $remote_destination/monthly -maxdepth 1 -mtime +365 -type f -exec rm -v {} \;

mkdir -p $remote_destination/$dir

echo "Copy backup to remote"

cp $filename $remote_destination/$dir/

echo "Copied backup to remote"
